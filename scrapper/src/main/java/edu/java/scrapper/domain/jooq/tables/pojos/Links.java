/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.domain.jooq.tables.pojos;

import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Links implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long linkId;
    private String url;
    private LocalDateTime lastUpdated;
    private LocalDateTime lastChecked;
    private Integer zoneOffset;
    private String additionalInfo;

    public Links() {}

    public Links(Links value) {
        this.linkId = value.linkId;
        this.url = value.url;
        this.lastUpdated = value.lastUpdated;
        this.lastChecked = value.lastChecked;
        this.zoneOffset = value.zoneOffset;
        this.additionalInfo = value.additionalInfo;
    }

    @ConstructorProperties({ "linkId", "url", "lastUpdated", "lastChecked", "zoneOffset", "additionalInfo" })
    public Links(
        @NotNull Long linkId,
        @NotNull String url,
        @NotNull LocalDateTime lastUpdated,
        @NotNull LocalDateTime lastChecked,
        @NotNull Integer zoneOffset,
        @Nullable String additionalInfo
    ) {
        this.linkId = linkId;
        this.url = url;
        this.lastUpdated = lastUpdated;
        this.lastChecked = lastChecked;
        this.zoneOffset = zoneOffset;
        this.additionalInfo = additionalInfo;
    }

    /**
     * Getter for <code>LINKS.LINK_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLinkId() {
        return this.linkId;
    }

    /**
     * Setter for <code>LINKS.LINK_ID</code>.
     */
    public void setLinkId(@NotNull Long linkId) {
        this.linkId = linkId;
    }

    /**
     * Getter for <code>LINKS.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 2048)
    @NotNull
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>LINKS.URL</code>.
     */
    public void setUrl(@NotNull String url) {
        this.url = url;
    }

    /**
     * Getter for <code>LINKS.LAST_UPDATED</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getLastUpdated() {
        return this.lastUpdated;
    }

    /**
     * Setter for <code>LINKS.LAST_UPDATED</code>.
     */
    public void setLastUpdated(@NotNull LocalDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    /**
     * Getter for <code>LINKS.LAST_CHECKED</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getLastChecked() {
        return this.lastChecked;
    }

    /**
     * Setter for <code>LINKS.LAST_CHECKED</code>.
     */
    public void setLastChecked(@NotNull LocalDateTime lastChecked) {
        this.lastChecked = lastChecked;
    }

    /**
     * Getter for <code>LINKS.ZONE_OFFSET</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getZoneOffset() {
        return this.zoneOffset;
    }

    /**
     * Setter for <code>LINKS.ZONE_OFFSET</code>.
     */
    public void setZoneOffset(@NotNull Integer zoneOffset) {
        this.zoneOffset = zoneOffset;
    }

    /**
     * Getter for <code>LINKS.ADDITIONAL_INFO</code>.
     */
    @Size(max = 2048)
    @Nullable
    public String getAdditionalInfo() {
        return this.additionalInfo;
    }

    /**
     * Setter for <code>LINKS.ADDITIONAL_INFO</code>.
     */
    public void setAdditionalInfo(@Nullable String additionalInfo) {
        this.additionalInfo = additionalInfo;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Links other = (Links) obj;
        if (this.linkId == null) {
            if (other.linkId != null)
                return false;
        }
        else if (!this.linkId.equals(other.linkId))
            return false;
        if (this.url == null) {
            if (other.url != null)
                return false;
        }
        else if (!this.url.equals(other.url))
            return false;
        if (this.lastUpdated == null) {
            if (other.lastUpdated != null)
                return false;
        }
        else if (!this.lastUpdated.equals(other.lastUpdated))
            return false;
        if (this.lastChecked == null) {
            if (other.lastChecked != null)
                return false;
        }
        else if (!this.lastChecked.equals(other.lastChecked))
            return false;
        if (this.zoneOffset == null) {
            if (other.zoneOffset != null)
                return false;
        }
        else if (!this.zoneOffset.equals(other.zoneOffset))
            return false;
        if (this.additionalInfo == null) {
            if (other.additionalInfo != null)
                return false;
        }
        else if (!this.additionalInfo.equals(other.additionalInfo))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.linkId == null) ? 0 : this.linkId.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.lastUpdated == null) ? 0 : this.lastUpdated.hashCode());
        result = prime * result + ((this.lastChecked == null) ? 0 : this.lastChecked.hashCode());
        result = prime * result + ((this.zoneOffset == null) ? 0 : this.zoneOffset.hashCode());
        result = prime * result + ((this.additionalInfo == null) ? 0 : this.additionalInfo.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Links (");

        sb.append(linkId);
        sb.append(", ").append(url);
        sb.append(", ").append(lastUpdated);
        sb.append(", ").append(lastChecked);
        sb.append(", ").append(zoneOffset);
        sb.append(", ").append(additionalInfo);

        sb.append(")");
        return sb.toString();
    }
}
